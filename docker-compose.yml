version: '3'
services:

    #PHP Service
    app:
        build:
            context: ./
            dockerfile: Dockerfile
        container_name: mini-article_app
        restart: unless-stopped
        tty: true
        ports:
            - "8000:8000"
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        volumes:
            - ./:/var/www
        networks:
            - mini-article-ms
        links:
            - db

    #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: mini-article_webserver
        restart: unless-stopped
#        tty: true
        ports:
            - "80:80"
            - "443:443"
        networks:
            - mini-article-ms
        volumes:
            - ./:/var/www
            - ./docker/nginx:/etc/nginx/conf.d/
        links:
            - app

    #MySQL Service
    db:
        image: mysql:8.1.0
        container_name: mini-article_db
        restart: unless-stopped
        tty: true
        volumes:
            - ./docker/mysql:/docker-entrypoint-initdb.d
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - mini-article-ms

    cache:
        image: redis:7.2.1-alpine
        container_name: mini-article_cache
        restart: unless-stopped
        tty: true
        ports:
            - "6379:6379"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - mini-article-ms
#Docker Networks
networks:
    mini-article-ms:
        driver: bridge
